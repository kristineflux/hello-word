import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;

public class OttomatikSignUpPage extends BasePage {

    public WebDriver driver;


    public OttomatikSignUpPage(WebDriver driver) {
        super(driver);
    }


    public void visitSignUpPage() {
        visit(baseURL + "/signup");
    }


    public boolean isSubdomainDisplayed() {
        WebElement element = find(OttomatikSignUpPageLocators.subdomain);
        return isDisplayed(element);
    }

    public boolean isEmailDisplayed() {
        WebElement element = find(OttomatikSignUpPageLocators.email);
        return isDisplayed(element);
    }

    public boolean isPasswordDisplayed() {
        WebElement element = find(OttomatikSignUpPageLocators.password);
        return isDisplayed(element);
    }

    public boolean isCheckboxDisplayed() {
        WebElement element = find(OttomatikSignUpPageLocators.checkbox);
        return isDisplayed(element);
    }

    public boolean isSignUpButtonDisplayed() {
        WebElement element = find(OttomatikSignUpPageLocators.signin);
        return isDisplayed(element);
    }

    public boolean isSignInButtonDisplayed() {
        WebElement element = find(OttomatikSignUpPageLocators.signup);
        return isDisplayed(element);
    }






    public void EnterSubDomain(String text) {
        type(OttomatikSignUpPageLocators.subdomain, text);
    }

    public void EnterEmail(String text) {
        WebElement element = find(OttomatikSignUpPageLocators.email);
        type(OttomatikSignUpPageLocators.email, text);
    }

    public void EnterPassword(String text) {
        WebElement element = find(OttomatikSignUpPageLocators.password);
        type(OttomatikSignUpPageLocators.password, text);
    }

    public void ClickCheckbox() {
        WebElement element = find(OttomatikSignUpPageLocators.checkbox);
        element.click();
    }

    public void ClickSignUpButton() {
        WebElement element = find(OttomatikSignUpPageLocators.signup);
        element.click();
    }

    public boolean isSubdomainErrorDisplayed() {
        WebElement element = find(OttomatikSignUpPageLocators.subdomainerror);
        return isDisplayed(element);
    }

    public String getSubdomainErrorText() {
        WebElement element = find(OttomatikSignUpPageLocators.subdomainerror);
        return element.getText();
    }


    public void clickSignInButton() {
        WebElement element = find(OttomatikSignUpPageLocators.signin);
        element.click();

    }
